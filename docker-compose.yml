services:
  cms-main-system:
    build:
      context: backend/cms-sys
      dockerfile: Dockerfile
    networks:
      - whole-system-network
    depends_on:
      vault:
        condition: service_healthy
      postgres-cms:
        condition: service_healthy
    environment:
      - DB_HOST=postgres-cms
      - DB_PORT=5432
      - DB_NAME=cms_db
      - DB_USER=postgres
      - DB_PASSWORD=cms_password_123
      - APP_ENV=development
      - LOG_LEVEL=info
      - LOG_FILE_PATH=/app/logs/app.log
      - LOG_MAX_SIZE=100
      - LOG_MAX_BACKUPS=3
      - LOG_MAX_AGE=28
      - LOG_COMPRESS=true
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=root
      - LOG_CONSOLE=true
    ports:
      - "8080:8080"
    restart: unless-stopped

  vault:
    image: hashicorp/vault:1.15
    container_name: vault
    networks:
      - whole-system-network
    ports:
      - "8200:8200"
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=root
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
    volumes:
      - ./vault-init.sh:/vault-init.sh
      - ./rsa:/vault/keys
    entrypoint: /bin/sh
    command: -c "vault server -dev & sleep 5 && sh /vault-init.sh && tail -f /dev/null"
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  postgres-cms:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=cms_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=cms_password_123
    volumes:
      - postgres-cms:/var/lib/postgresql/data
    networks:
      - whole-system-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d cms_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-lms:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=lms_db
      - POSTGRES_USER=lms_user
      - POSTGRES_PASSWORD=lms_password
    volumes:
      - postgres-lms:/var/lib/postgresql/data
    networks:
      - whole-system-network
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lms_user -d lms_db"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  whole-system-network:
    driver: bridge

volumes:
  postgres-cms:
    driver: local
  postgres-lms:
    driver: local